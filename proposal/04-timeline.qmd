# Project plan

## Start-up phase

<!--
Covering the planning phase, this section should provide a relatively
detailed plan of how work will start on the project. This section is
important because projects need to get up and running quickly.


 - [ ] Setting up collaboration platform inc. code for contributors etc.
 - [ ] Licence decisions
 - [ ] Reporting framework
-->

In some ways, this project started years ago. We already have a proof of
concept implementation of the DAP using devel feature flags. Since then, we have
contacted Posit to align on shortcomings and plan features that are preventing a
more comprehensive solution in both Posit and other IDEs.

If funded, the first steps will be to inspect the DAP specification and map its
various request messages to the place in the browser REPL where that information
is best retreived. This map will inform which additional hooks may be necessary
for a complete implementation and will help to prioritize further development.

After this planning phase, we will be able to provide a more clear outline of
capabilities that would be necessary within R, which we plan to share with R
core. Assuming that the R core team will not be immediately ready to jump into
this development, we plan to advance the project as a patch that can support a
proof-of-concept implementation of the DAP.

## Technical delivery

<!--
Covering the actual delivery of the project this section should
provide at least a high-level description of the implementation.

Including target dates is really important as you need to be committed
and the ISC need to have a means of tracking delivery
-->

### Submission Preparation: Planning and Analysis (September 2025)

- Complete mapping of the DAP specification to the R REPL browser
  loop, identifying all necessary touchpoints and data requirements
- Analysis of existing implementations (`vscDebugger`, `ark`)
  to understand current limitations and opportunities for improvement
- **Deliverable:** Comprehensive technical specification document with workflow
  diagrams and gap analysis

### Phase 1: Core Infrastructure Development (November 2025)

- Implement enhanced browser hooks in a patched version of R,
  extending beyond current `USE_BROWSER_HOOKS` capabilities
- Develop the foundational DAP server architecture using `later`
  for background message handling and core protocol implementation
- **Deliverable:** Working R patch with enhanced debugging hooks and basic
  DAP server framework

### Phase 2: DAP Protocol Implementation (December 2025)

- Implement core DAP request handlers (threads, stackTrace, scopes, variables, evaluate)
- Add stepping functionality (stepIn, stepOut, stepOver, continue)
  and breakpoint management
- **Deliverable:** Feature-complete DAP server supporting majority of
  protocol specification

### Phase 3: Integration and Testing (January 2026)

- Comprehensive testing across multiple IDEs (VSCode, vim/neovim,
  emacs), performance optimization, and edge case handling
- Documentation, packaging, and preparation for broader
  community feedback
- **Deliverable:** Production-ready code with comprehensive documentation

### Post-Complextion Step: Community Engagement and Handoff (January - February 2026)

- Share completed work with R Core for integration discussions
- Coordinate with `vscDebugger` and `ark` teams for potential convergence
- Publish technical blog posts and present findings to broader R community

## Other aspects

<!--
How will you ensure that your work is available to the widest number
of people? Please specify the open-source or creative commons license(s)
you will use, how you will host your code so that others can contribute,
and how you will publicize your work. We encourage you to plan content
to be shared quarterly on the R Consortium blog.

 - [ ] Announcement post
 - [ ] Delivery blog post
 - [ ] Social media
 - [ ] UseR!
 - [ ] ISC meetings
-->

### Communication during development

As this is largely exploratory work, our primary stakeholders are active
DAP developers and R Core team members. We plan to make materials broadly
available throughout the 3-month development cycle, with structured engagement
at key milestones:

- **Month 1:** Share technical specification and R patch proposal with R Core
- **Month 2:** Interim progress report and community feedback session
- **Month 3:** Final presentation to R Core and broader R community

This includes our mapping of the DAP specification to the `browser()` REPL loop,
R internal changes, and pilot server implementation leveraging these changes.

### Broader communication

With the extended timeline, we plan montly blog posts to share:
- November 2025: Project kickoff and technical approach
- December 2025: Progress update and early findings
- January 2026: Final results and next steps for community adoption

If we garner positive feedback from R Core developers indicating high likelihood
of adoption of our proposed patch changes, we will write a comprehensive
technical blog post about the challenges faced across implementations, and how
the ISC process provided a vehicle for an agnostic path forward.

The goal is to post through pacha.dev/blog and re-post with the R Consortium.

## Budget & funding plan

<!--
Outline the milestones for development and how much funding will be
required for each stage (as payments will be tied to project milestone
completion). Each milestone should specify the work to be done and the
expected outcomes, providing enough detail for the ISC to understand
the scope of the project work and assess the likelihood of success.

We expect that most of the budget will be allocated
for labor costs. We do not cover indirect costs. The ISC grants cannot
cover such things as travel, lodging, food, journal publication fees,
or personal hardware. Cloud services may be covered if they are specific
to the project and the project period. The ISC reserves the right to vet
how funds are used for each project separately. If in doubt, please reach
out to us.
-->

We are proposing work that we expect to take approximately three months, starting
in October 2025. Given the technical complexity and the need for thorough
R Core integration, we are requesting funds to support one developer, Mauricio,
at 50% time for three months. Given the technical breadth and depth of the work,
we are requesting **USD $5,240** to support them through this project.

This number was selected after reviewing previous years' ISC grant
recipients and balancing a reasonably scoped ISC grant against salary
expectations for a North America-based early-career developer.
