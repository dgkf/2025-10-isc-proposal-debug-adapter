# Project plan

## Start-up phase

<!--
Covering the planning phase, this section should provide a relatively
detailed plan of how work will start on the project. This section is
important because projects need to get up and running quickly.


 - [ ] Setting up collaboration platform inc. code for contributors etc.
 - [ ] Licence decisions
 - [ ] Reporting framework
-->

In some ways, this project started years ago. We already have a proof of
concept implementation of the DAP using devel feature flags. Since then, we have
contacted Posit to align on shortcomings and plan features that are preventing a
more comprehensive solution in both Posit and other IDEs.

If funded, the first steps will be to inspect the DAP specification and map its
various request messages to the place in the browser REPL where that information
is best retreived. This map will inform which additional hooks may be necessary
for a complete implementation and will help to prioritize further development.

After this planning phase, we will be able to provide a more clear outline of
capabilities that would be necessary within R, which we plan to share with R
core. Assuming that the R core team will not be immediately ready to jump into
this development, we plan to advance the project as a patch that can support a
proof-of-concept implementation of the DAP.

## Technical delivery

<!--
Covering the actual delivery of the project this section should
provide at least a high-level description of the implementation.

Including target dates is really important as you need to be committed
and the ISC need to have a means of tracking delivery
-->

### Planning Deliverables (through week 1)

- Providing a mapping of the DAP specification to where in the R REPL
  loop the requested information is more meaningfully gathered. Subject
  to change, this is expected to be best represented as a workflow
  diagram that can be used as reference for other projects.
- Signatories will familiarize themselves more deeply with existing
  implementations and scope development next steps. This will largely
  be organized through issues filed alongside a source control project.

### Preparatory Development (through month 1)

- Implement the necessary browser hooks in a patched version of R
  to fully cover the implementation of a DAP.
- Explore using `later` to listen for DAP requests while R idles. 

### DAP Server Proof-of-Concept Development (through month 3)

- Continue with the implementation of a proof-of-concept DAP server,
  implemented as an R package. Aim to support all reasonably achievable parts
  of the DAP specification.
- Share patched version of R for broader feedback. With support from R core,
  invite review and further development.
- Feature communication (see below)

## Other aspects

<!--
How will you ensure that your work is available to the widest number
of people? Please specify the open-source or creative commons license(s)
you will use, how you will host your code so that others can contribute,
and how you will publicize your work. We encourage you to plan content
to be shared quarterly on the R Consortium blog.

 - [ ] Announcement post
 - [ ] Delivery blog post
 - [ ] Social media
 - [ ] UseR!
 - [ ] ISC meetings
-->

### Communication during development

As this is largely exploratory work, our primary stakeholders are active
DAP developers. We plan to make materials broadly available, but with an
emphasis on distributing to this particular audience. This includes our
mapping of the DAP specification to the `browser()` REPL loop, R internal
changes and pilot server implementation leveraging these changes.

### Broader communication

If we garner positive feedback from R Core developers which would indicate
a high likelihood of adoption of our proposed patch changes, we would want to
write a technical blog post about the challenges faced across implementations,
and how the ISC process provided a vehicle for an agnostic path forward.

<!--
TODO: pashadev blog post? and social media
-->

## Budget & funding plan

<!--
Outline the milestones for development and how much funding will be
required for each stage (as payments will be tied to project milestone
completion). Each milestone should specify the work to be done and the
expected outcomes, providing enough detail for the ISC to understand
the scope of the project work and assess the likelihood of success.

We expect that most of the budget will be allocated
for labor costs. We do not cover indirect costs. The ISC grants cannot
cover such things as travel, lodging, food, journal publication fees,
or personal hardware. Cloud services may be covered if they are specific
to the project and the project period. The ISC reserves the right to vet
how funds are used for each project separately. If in doubt, please reach
out to us.
-->

We are proposing work that we expect to take approximately three months.
Given the availability of the consulting signatories, we are requesting
funds to support one developer, Mauricio, at 50% time for three months.
Given the technical breadth and depth of the work, we are requesting
**USD $<!-- TODO -->** to support them through this project.

This number was selected after reviewing previous years' ISC grant
recipients and balancing a reasonably scoped ISC grant against salary
expectations for a North America-based early-career developer.
